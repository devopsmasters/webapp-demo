node {
    def server
    def buildInfo
    def rtMaven

    
    stage('Checkout') {
        /* Let's make sure we have the repository cloned to our workspace */
	    task 'Checkout Source'
	    checkout scm
    }
    stage('Code Analysis') {	
	    task 'Static Code Analysis'
	    sh "echo code analysis tool"
    }
    stage ('Artifactory configuration') {
        // Obtain an Artifactory server instance, defined in Jenkins --> Manage:
        server = Artifactory.server 'local-artifactory'

        rtMaven = Artifactory.newMavenBuild()
        rtMaven.tool = 'maven3' // Tool name from Jenkins configuration
        rtMaven.deployer releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local', server: server
        //rtMaven.resolver releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local', server: server
        rtMaven.deployer.deployArtifacts = false // Disable artifacts deployment during Maven run

        buildInfo = Artifactory.newBuildInfo()
    }
    stage ('Test') {
    	task 'Run Unit Test'
        rtMaven.run pom: 'pom.xml', goals: 'clean test'
    }
    stage ('Install') {
   	task 'Run Maven Install'
        rtMaven.run pom: 'pom.xml', goals: 'install', buildInfo: buildInfo
    }
 
    stage ('Deploy') {
    	task 'Maven deploy artifacts'
        rtMaven.deployer.deployArtifacts buildInfo
    }
        
    stage ('Publish build info') {
    	task 'Publish BuildInfo to artifactory'
        server.publishBuildInfo buildInfo
    }
   
  stage('Deploy Application') {
	  def stackname = 'sample-tomcat-app'
	  task 'Deploy application on an EC2 instance'
	  dir ('./aws') {
	    def status = sh(returnStatus: true, script: "aws cloudformation wait stack-exists --stack-name $stackname").trim()
	    if ( $status == '0' ) {
	      //sh "aws cloudformation update-stack "  
	    }  
	    else {
	      sh "aws cloudformation create-stack --stack-name $stackname \
	          --template-body file://Tomcat-app-cfn.yaml \
		  --parameters ParameterKey=KeyPairName,ParameterValue=MyKey ParameterKey=EC2Subnets,ParameterValue= \
		               ParameterKey=AppURL,ParameterValue=$url ParameterKey=VPCId,ParameterValue=vpc"
	    }
	  }
  }
    
}
